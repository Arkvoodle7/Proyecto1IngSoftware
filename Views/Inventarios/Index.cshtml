@{
    ViewData["Title"] = "Gestión de Inventarios";
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary">Gestión de Inventarios</h1>
        <!-- Botón para redirigir a la vista de agregar producto -->
        <a href="@Url.Action("AgregarProd", "Inventarios")" class="btn btn-success btn-lg shadow">
            Agregar Producto
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h5><i class="fas fa-box"></i> Lista de Productos</h5>
        </div>
        <div class="card-body">
            <table id="tablaProductos" class="table table-hover table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Código</th>
                        <th>Descripción</th>
                        <th>Precio</th>
                        <th>Unidades Disponibles</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="productosBody">
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    function cargarProductos() {
        fetch('/Inventarios/ObtenerProductos')
            .then(response => response.json())
            .then(data => {
                const tbody = document.getElementById('productosBody');
                tbody.innerHTML = '';
                data.forEach(producto => {
                    tbody.innerHTML += `
                            <tr>
                                <td>${producto.codigo}</td>
                                <td>${producto.descripcion}</td>
                                <td>${producto.precio.toFixed(2)}</td>
                                <td>${producto.unidadesDisponibles}</td>
                                <td>${producto.disparador ? 'Activo' : 'Inactivo'}</td>
                                <td>
                                    <a href="/Inventarios/EditarProd/${producto.codigo}" class="btn btn-warning btn-sm">Editar</a>
                                    <button class="btn btn-danger btn-sm" onclick="confirmarEliminacion(${producto.codigo})">Eliminar</button>
                                </td>
                            </tr>
                        `;
                });
            })
            .catch(err => {
                alert("Error al cargar los productos.");
                console.error(err);
            });
    }

    function confirmarEliminacion(id) {
        if (confirm("¿Está seguro de que desea eliminar este producto?")) {
            eliminarProducto(id);
        }
    }

    function eliminarProducto(id) {
        fetch(`/Inventarios/EliminarProducto/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (response.ok) {
                    alert("Producto eliminado exitosamente.");
                    cargarProductos(); // Recargar la tabla
                } else {
                    alert("Error al eliminar el producto.");
                }
            })
            .catch(err => {
                alert("Error al conectar con el servidor.");
                console.error(err);
            });
    }

    document.addEventListener('DOMContentLoaded', cargarProductos);
</script>